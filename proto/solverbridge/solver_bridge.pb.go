// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: solver_bridge.proto

package solverbridge

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubmitAnswerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChallengeId   string                 `protobuf:"bytes,1,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`    // Required
	Answer        string                 `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`                                 // Solver's answer (if success)
	SolverJobId   string                 `protobuf:"bytes,3,opt,name=solver_job_id,json=solverJobId,proto3" json:"solver_job_id,omitempty"`  // Optional job identifier
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                                 // "success" or "failed"; defaults to success if empty
	ErrorCode     string                 `protobuf:"bytes,5,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`          // If failed
	ErrorMessage  string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // If failed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitAnswerRequest) Reset() {
	*x = SubmitAnswerRequest{}
	mi := &file_solver_bridge_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAnswerRequest) ProtoMessage() {}

func (x *SubmitAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_solver_bridge_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAnswerRequest.ProtoReflect.Descriptor instead.
func (*SubmitAnswerRequest) Descriptor() ([]byte, []int) {
	return file_solver_bridge_proto_rawDescGZIP(), []int{0}
}

func (x *SubmitAnswerRequest) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *SubmitAnswerRequest) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *SubmitAnswerRequest) GetSolverJobId() string {
	if x != nil {
		return x.SolverJobId
	}
	return ""
}

func (x *SubmitAnswerRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SubmitAnswerRequest) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *SubmitAnswerRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type SubmitAnswerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accepted      bool                   `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitAnswerResponse) Reset() {
	*x = SubmitAnswerResponse{}
	mi := &file_solver_bridge_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAnswerResponse) ProtoMessage() {}

func (x *SubmitAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_solver_bridge_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAnswerResponse.ProtoReflect.Descriptor instead.
func (*SubmitAnswerResponse) Descriptor() ([]byte, []int) {
	return file_solver_bridge_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitAnswerResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *SubmitAnswerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_solver_bridge_proto protoreflect.FileDescriptor

const file_solver_bridge_proto_rawDesc = "" +
	"\n" +
	"\x13solver_bridge.proto\x12\fsolverbridge\"\xd0\x01\n" +
	"\x13SubmitAnswerRequest\x12!\n" +
	"\fchallenge_id\x18\x01 \x01(\tR\vchallengeId\x12\x16\n" +
	"\x06answer\x18\x02 \x01(\tR\x06answer\x12\"\n" +
	"\rsolver_job_id\x18\x03 \x01(\tR\vsolverJobId\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"error_code\x18\x05 \x01(\tR\terrorCode\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\"L\n" +
	"\x14SubmitAnswerResponse\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\bR\baccepted\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2e\n" +
	"\fSolverBridge\x12U\n" +
	"\fSubmitAnswer\x12!.solverbridge.SubmitAnswerRequest\x1a\".solverbridge.SubmitAnswerResponseB!Z\x1fproto/solverbridge;solverbridgeb\x06proto3"

var (
	file_solver_bridge_proto_rawDescOnce sync.Once
	file_solver_bridge_proto_rawDescData []byte
)

func file_solver_bridge_proto_rawDescGZIP() []byte {
	file_solver_bridge_proto_rawDescOnce.Do(func() {
		file_solver_bridge_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_solver_bridge_proto_rawDesc), len(file_solver_bridge_proto_rawDesc)))
	})
	return file_solver_bridge_proto_rawDescData
}

var file_solver_bridge_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_solver_bridge_proto_goTypes = []any{
	(*SubmitAnswerRequest)(nil),  // 0: solverbridge.SubmitAnswerRequest
	(*SubmitAnswerResponse)(nil), // 1: solverbridge.SubmitAnswerResponse
}
var file_solver_bridge_proto_depIdxs = []int32{
	0, // 0: solverbridge.SolverBridge.SubmitAnswer:input_type -> solverbridge.SubmitAnswerRequest
	1, // 1: solverbridge.SolverBridge.SubmitAnswer:output_type -> solverbridge.SubmitAnswerResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_solver_bridge_proto_init() }
func file_solver_bridge_proto_init() {
	if File_solver_bridge_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_solver_bridge_proto_rawDesc), len(file_solver_bridge_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_solver_bridge_proto_goTypes,
		DependencyIndexes: file_solver_bridge_proto_depIdxs,
		MessageInfos:      file_solver_bridge_proto_msgTypes,
	}.Build()
	File_solver_bridge_proto = out.File
	file_solver_bridge_proto_goTypes = nil
	file_solver_bridge_proto_depIdxs = nil
}
